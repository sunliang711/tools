#!/bin/bash

thisScript=$(cd $(dirname $BASH_SOURCE)&&pwd)
cd $thisScript

#generate docker-compose config file dynamiclly
sed "s+ROOT+$thisScript+" docker-compose.tmpl.yml >docker-compose.yml

#check cmd
if ! command -v docker >/dev/null 2>&1;then
    echo "Need docker."
    exit 1
fi
if ! command -v docker-compose >/dev/null 2>&1;then
    echo "Need docker-compose."
    exit 1
fi
gen(){
	domainName=${1:?missing domain name}

	##privatekey file path
	#priv=$(ls nginx-wordpress-volume/cert/*.key|awk -F'/' '{print $NF}')
	##publickey filepath
	#pem=$(ls nginx-wordpress-volume/cert/*.pem|awk -F'/' '{print $NF}')
	#echo "priv: $priv"
	#echo "pem: $pem"

	#check cert/domain name.key existence
	if [ ! -e nginx-wordpress-volume/cert/${domainName}.key ];then
		echo "missing file nginx-wordpress-volume/cert/${domainName}.key"
		exit 1
	fi
	#check cert/domain name.pem existence
	if [ ! -e nginx-wordpress-volume/cert/${domainName}.pem ];then
		echo "missing file nginx-wordpress-volume/cert/${domainName}.pem"
		exit 1
	fi
	sed -e "s+DOMAIN+${domainName}+g" nginx-wordpress-volume/default.conf >nginx-wordpress-volume/conf.d/default.conf
	docker-compose -f docker-compose.yml up -d

	#echo "replace /etc/nginx/conf.d/default with nginx-wordpress-volume/default.conf"
	#docker cp nginx-wordpress-volume/default.conf $(basename $thisScript)_nginx_1:/etc/nginx/conf.d/default.conf
	#stop
	#start
}
start(){
	docker-compose -f docker-compose.yml start
}
stop(){
	docker-compose -f docker-compose.yml stop
}
rm(){
	docker-compose -f docker-compose.yml down
}

case $1 in
	create)
		gen $2
		;;
	rm)
		rm
		;;
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		stop
		start
		;;
	*)
		echo "Usage: $(basename $0) create|start|stop|restart|rm"
		echo "Note: create cmd need domain name to set ssl certificate"
		exit 1
		;;
esac

